# Generated by Django 3.2.9 on 2022-01-21 10:19

import adminsortable.fields
import datetime
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id_number', models.PositiveIntegerField(default=0)),
                ('id_type', models.CharField(choices=[('NA', 'National'), ('IK', 'Ikama'), ('PA', 'Passport')], default='NA', max_length=25)),
                ('is_landlord', models.BooleanField(default=False)),
                ('is_tenant', models.BooleanField(default=False)),
                ('is_employee', models.BooleanField(default=False)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('department', models.CharField(blank=True, choices=[('OPERATION', 'operation dept.'), ('FINANCE', 'financial dept.'), ('AUDIT', 'audit dept.'), ('HR', 'human resources dept.')], max_length=25, null=True)),
                ('hire_date', models.DateTimeField(null=True)),
                ('start_date', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('district', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Address',
            },
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_vacant', models.BooleanField(default=True)),
                ('has_parking', models.BooleanField(default=False)),
                ('has_internet_connection', models.BooleanField(default=False)),
                ('has_gas', models.BooleanField(default=False)),
                ('has_electricity', models.BooleanField(default=False)),
                ('has_airconditioning', models.BooleanField(default=False)),
                ('pets_allowed', models.BooleanField(default=False)),
                ('area', models.DecimalField(decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('room_count', models.PositiveIntegerField(default=True)),
                ('number', models.PositiveIntegerField()),
                ('bedroom_count', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_apartment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(db_index=True, default=1)),
                ('total_incl_tax', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Total (inc. tax)')),
                ('total_excl_tax', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Total (excl. tax)')),
                ('date_issued', models.DateField(default=datetime.date.today)),
                ('date_dued', models.DateField(blank=True, help_text='The date when the total amount should have been collected', null=True, verbose_name='Due date')),
                ('date_paid', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('terms', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-number',),
            },
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('members', models.ManyToManyField(related_name='boards', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='owned_boards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('column_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='core.board')),
            ],
            options={
                'ordering': ['column_order'],
            },
        ),
        migrations.CreateModel(
            name='Commercial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_vacant', models.BooleanField(default=True)),
                ('has_parking', models.BooleanField(default=False)),
                ('has_internet_connection', models.BooleanField(default=False)),
                ('has_gas', models.BooleanField(default=False)),
                ('has_electricity', models.BooleanField(default=False)),
                ('has_airconditioning', models.BooleanField(default=False)),
                ('pets_allowed', models.BooleanField(default=False)),
                ('area', models.DecimalField(decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('room_count', models.PositiveIntegerField(default=True)),
                ('number', models.PositiveIntegerField()),
                ('commercial_type', models.CharField(choices=[('ST', 'Store'), ('OF', 'Office'), ('GS', 'Gas station'), ('RS', 'Restaurant'), ('CF', 'Coffee shop'), ('KS', 'Kiosk')], max_length=2, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_commercial', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Estimate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(db_index=True, default=1)),
                ('total_incl_tax', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Total (inc. tax)')),
                ('total_excl_tax', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Total (excl. tax)')),
                ('date_issued', models.DateField(default=datetime.date.today)),
                ('date_dued', models.DateField(blank=True, help_text='The date when the total amount should have been collected', null=True, verbose_name='Due date')),
                ('date_paid', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('terms', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-number',),
            },
        ),
        migrations.CreateModel(
            name='ExpenseClaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(db_index=True, default=1)),
                ('total_incl_tax', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Total (inc. tax)')),
                ('total_excl_tax', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Total (excl. tax)')),
                ('date_issued', models.DateField(default=datetime.date.today)),
                ('date_dued', models.DateField(blank=True, help_text='The date when the total amount should have been collected', null=True, verbose_name='Due date')),
                ('date_paid', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('terms', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-number',),
            },
        ),
        migrations.CreateModel(
            name='HtmlTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('template_type', models.CharField(choices=[('AC', 'Apartment contract'), ('EC', 'Employee contract'), ('I', 'Invoice')], default='AC', max_length=2, unique=True)),
                ('template_code', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(db_index=True, default=1)),
                ('total_incl_tax', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Total (inc. tax)')),
                ('total_excl_tax', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Total (excl. tax)')),
                ('date_issued', models.DateField(default=datetime.date.today)),
                ('date_dued', models.DateField(blank=True, help_text='The date when the total amount should have been collected', null=True, verbose_name='Due date')),
                ('date_paid', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('terms', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-number',),
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('address', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.address')),
                ('apartment', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='property', to='core.apartment')),
                ('commercial', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='property', to='core.commercial')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_property', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='properties', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_property', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('rate', models.DecimalField(decimal_places=5, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('1'))])),
            ],
        ),
        migrations.CreateModel(
            name='Tower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tower', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_tower', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Villa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_vacant', models.BooleanField(default=True)),
                ('has_parking', models.BooleanField(default=False)),
                ('has_internet_connection', models.BooleanField(default=False)),
                ('has_gas', models.BooleanField(default=False)),
                ('has_electricity', models.BooleanField(default=False)),
                ('has_airconditioning', models.BooleanField(default=False)),
                ('pets_allowed', models.BooleanField(default=False)),
                ('area', models.DecimalField(decimal_places=2, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('room_count', models.PositiveIntegerField(default=True)),
                ('number', models.PositiveIntegerField()),
                ('has_swimming_pool', models.BooleanField(default=False)),
                ('has_backyard', models.BooleanField(default=False)),
                ('bedroom_count', models.PositiveIntegerField(default=0)),
                ('floor_count', models.PositiveIntegerField(default=1)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_villa', to=settings.AUTH_USER_MODEL)),
                ('tower', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tower_villa', to='core.tower')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_villa', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('remarks', models.TextField(null=True)),
                ('state', models.CharField(choices=[('S', 'Signed'), ('N', 'Not signed'), ('T', 'TERMINATED')], default='N', max_length=1)),
                ('document', models.FileField(null=True, upload_to='attachements/')),
                ('contract_type', models.CharField(choices=[('RENT', 'Rent'), ('BUY', 'Buy')], max_length=100)),
                ('location_price', models.DecimalField(decimal_places=2, default=0, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('deposit', models.DecimalField(decimal_places=2, default=0, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_unitcontract', to=settings.AUTH_USER_MODEL)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='property_contracts', to='core.property')),
                ('tax_rate', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.taxrate')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tenant_contracts', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_unitcontract', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('priority', models.CharField(choices=[('H', 'High'), ('M', 'Medium'), ('L', 'Low')], default='M', max_length=1)),
                ('task_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('assignees', models.ManyToManyField(related_name='tasks', to=settings.AUTH_USER_MODEL)),
                ('column', adminsortable.fields.SortableForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.column')),
            ],
            options={
                'ordering': ['task_order'],
            },
        ),
        migrations.AddField(
            model_name='property',
            name='villa',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='property', to='core.villa'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Amount')),
                ('detail', models.CharField(blank=True, max_length=255, null=True)),
                ('date_paid', models.DateField(default=datetime.date.today)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ('-date_paid',),
            },
        ),
        migrations.CreateModel(
            name='MailHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('delivery_state', models.CharField(choices=[('S', 'Success'), ('F', 'Failure')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_mailhistory', to=settings.AUTH_USER_MODEL)),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_mails', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_mails', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_mailhistory', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('unit_price_excl_tax', models.DecimalField(decimal_places=2, max_digits=8)),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=8)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lines', to='core.invoice')),
                ('tax_rate', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.taxrate')),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='invoices', to='core.unitcontract'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ExpenseClaimLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('unit_price_excl_tax', models.DecimalField(decimal_places=2, max_digits=8)),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=8)),
                ('expense_claim', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lines', to='core.expenseclaim')),
                ('tax_rate', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.taxrate')),
            ],
        ),
        migrations.AddField(
            model_name='expenseclaim',
            name='contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='expense_claims', to='core.unitcontract'),
        ),
        migrations.AddField(
            model_name='expenseclaim',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='EstimateLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('unit_price_excl_tax', models.DecimalField(decimal_places=2, max_digits=8)),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=8)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lines', to='core.estimate')),
                ('tax_rate', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.taxrate')),
            ],
        ),
        migrations.AddField(
            model_name='estimate',
            name='contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='estimates', to='core.unitcontract'),
        ),
        migrations.AddField(
            model_name='estimate',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='EmployeeContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('remarks', models.TextField(null=True)),
                ('state', models.CharField(choices=[('S', 'Signed'), ('N', 'Not signed'), ('T', 'TERMINATED')], default='N', max_length=1)),
                ('document', models.FileField(null=True, upload_to='attachements/')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('salary_payments', models.CharField(choices=[('month', 'Every Month'), ('2months', 'Every Two Months'), ('3months', 'Every Three Months'), ('6months', 'Every Six Months')], max_length=100)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_employeecontract', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='employee_contract', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_employeecontract', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='commercial',
            name='tower',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tower_commercials', to='core.tower'),
        ),
        migrations.AddField(
            model_name='commercial',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_commercial', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('text', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.task')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='BillLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('unit_price_excl_tax', models.DecimalField(decimal_places=2, max_digits=8)),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=8)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lines', to='core.bill')),
                ('tax_rate', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.taxrate')),
            ],
        ),
        migrations.AddField(
            model_name='bill',
            name='contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='bills', to='core.unitcontract'),
        ),
        migrations.AddField(
            model_name='bill',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Attachement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('path', models.FileField(null=True, upload_to='attachements/')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_attachement', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_attachement', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'File attachment',
            },
        ),
        migrations.AddField(
            model_name='apartment',
            name='tower',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tower_apartments', to='core.tower'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_apartment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='address',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.address'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='invoice',
            unique_together={('number', 'contract')},
        ),
        migrations.AlterUniqueTogether(
            name='expenseclaim',
            unique_together={('number', 'contract')},
        ),
        migrations.AlterUniqueTogether(
            name='estimate',
            unique_together={('number', 'contract')},
        ),
        migrations.AlterUniqueTogether(
            name='bill',
            unique_together={('number', 'contract')},
        ),
    ]
